   1) def findEvenNumbers(self, digits: List[int]) -> List[int]:
        a=set()
        for x,y,z in permutations(digits,3):
            if(x!=0 and z&1==0):
                a.add(100*x+10*y+z)
        return(sorted(a))
        
        
     2)def findEvenNumbers(self, digits: List[int]) -> List[int]:
        from itertools import permutations
        v=[]
        per=permutations(digits,3)
        for i in list(per):
            a=(int(''.join(map(str,i))))
            v.append(a)
        b=set()
        for i in range(len(v)):
            if(v[i]%2==0 and v[i]>=100):
                b.add(v[i])
        return(sorted(b))
        
        
        
        
        
        
        
        Example 1:

Input: digits = [2,1,3,0]
Output: [102,120,130,132,210,230,302,310,312,320]
Explanation: All the possible integers that follow the requirements are in the output array. 
Notice that there are no odd integers or integers with leading zeros.
Example 2:

Input: digits = [2,2,8,8,2]
Output: [222,228,282,288,822,828,882]
Explanation: The same digit can be used as many times as it appears in digits. 
In this example, the digit 8 is used twice each time in 288, 828, and 882. 
Example 3:

Input: digits = [3,7,5]
Output: []
Explanation: No even integers can be formed using the given digits.
 


    
